name: Release Setup

on:
  workflow_dispatch:
  release:
    types: [created]
permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build for Windows

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tqdm pyinstaller

    - name: Build
      run: |
        cp ./main.py ./dist/main.py
        cd ./dist && pyinstaller main.py --onefile
        cp ./dist/main.exe timeline-windows.exe
        
    - name: Save output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: timeline-windows.exe
        path: ./dist/timeline-windows.exe

    - name: Upload binary to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} timeline-windows.exe
  build-linux:
    runs-on: ubuntu-latest
    name: Build for Linux

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tqdm pyinstaller

    - name: Build
      run: |
        cp ./main.py ./dist/main.py
        cd ./dist && pyinstaller main.py --onefile
        cp ./dist/main timeline-linux
        
    - name: Save output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: timeline-linux
        path: ./dist/timeline-linux
        
    - name: Upload binary to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} timeline-linux
  build-macos:
    runs-on: macos-latest
    name: Build for macOS

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tqdm pyinstaller

    - name: Build
      run: |
        cp ./main.py ./dist/main.py
        cd ./dist && pyinstaller main.py --onefile
        cp ./dist/main timeline-macos
        
    - name: Save output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: timeline-macos
        path: ./dist/timeline-macos
        
    - name: Upload binary to release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} timeline-macos
  # upload-build:
  #   runs-on: ubuntu-latest
  #   name: Upload Release Asset
  #   needs: [build-windows, build-macos, build-linux]

  #   steps:
  #   - name: Download Windows artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #         name: timeline-windows.exe

  #   - name: Download Linux artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #         name: timeline-linux

  #   - name: Download macOS artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #         name: timeline-macos
      
  #   - name: Upload binaries to release
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       echo Uploading Windows release...
  #       gh release upload $GITHUB_REF timeline-windows.exe
        
  #       echo Uploading Linux release...
  #       gh release upload $GITHUB_REF timeline-linux.exe

  #       echo Uploading macOS release...
  #       gh release upload $GITHUB_REF timeline-macos.exe
